\begin{resumo}

A manutenção evolutiva de um \textit{software} é um processo importante para 
mantê-lo alinhado às necessidades dos stakeholders, bem como às demandas 
do mercado. Este processo é um desafio complexo, principalmente, no contexto 
do desenvolvimento mobile. Isso ocorre devido à rápida e constante evolução do 
cenário, o que torna o processo altamente dinâmico. A escolha do \textit{design} é de grande 
importância, bem como a correta escolha das técnicas de programação que serão utilizadas 
na implementação do \textit{software}. Aplicações que demandam uma urgência no prazo de conclusão 
costumam priorizar a agilidade na implementação, muitas vezes ignorando as boas 
práticas de desenvolvimento definidas pela comunidade da Engenharia de 
\textit{Software}. Nesse contexto, há margem para implantação de muitas 
melhorias nos produtos de \textit{software} produzidos. Este trabalho tem como
 intuito a condução de um estudo exploratório, orientado a provas de 
 conceito, promovendo a reengenharia de um aplicativo de \textit{software} existente, 
 e utilizando uma abordagem que combina \textit{Test Driven Development} e \textit{Domain-Driven Design}. 
 Para que seja possível a reengenharia do aplicativo, faz-se necessária a engenharia reversa 
 do mesmo, procurando compreender suas funcionalidades e particularidades qualitativas, uma 
 vez que o aplicativo encontra-se em atendimento a um público alvo específico, apesar da inerente 
 dificuldade em evoluí-lo. Acredita-se que essa dificuldade esteja ocorrendo, considerando consultas 
 realizadas informalmente junto à equipe do aplicativo, devido ao desenvolvimento do aplicativo ter 
 sido feito sem a equipe se atentar às boas práticas da Engenharia de \textit{Software}. Na época 
 do desenvolvimento do aplicativo, pelo mesmo ser de cunho solidário, havia a necessidade 
 de cumprimento de prazo curto, não possibilitando um processo mais criterioso e orientado 
 às boas práticas. Fez-se o básico nesse sentido, com breve elicitação de requisitos e 
 intensa etapa de desenvolvimento. O presente trabalho aplicará uma abordagem orientada a 
 testes, visando corrigir possíveis problemas antes mesmo da nova implantação do aplicativo. 
 Para tanto, faz-se uso de um processo cíclico, composto por: (i) escrita de teste unitário, 
 que inicialmente irá falhar, tendo em vista que o código ainda não foi implementado; (ii) 
 criação do código que satisfaça esse teste. Portanto, essa codificação deverá satisfazer 
 imediatamente o teste escrito; (iii) refatoração do código para melhorar aspectos pontuais, 
 por exemplo, legibilidade, e (iv) por fim, execução do teste novamente. Adicionalmente, 
 usando \textit{design} orientado a domínio, pretende-se conseguir maior valor semântico na nova proposta 
 de desenvolvimento do aplicativo. Considerando o domínio a razão do negócio existir, compreendendo 
 ideias, conhecimentos e processos de negócio, centrar-se nele tende a permitir maior imersão dos 
 envolvidos. Consequentemente, isso pode indicar maior coerência com as necessidades reais dos 
 usuários e, portanto, maior sucesso da solução quando disponibilizada para uso. Tais melhorias 
 são desejadas no aplicativo em questão.

 \vspace{\onelineskip}
    
 \noindent
 \textbf{Palavras-chave}: Reengenharia. Engenharia Reversa. Aplicações \textit{Mobile}. Desenvolvimento Orientado a Testes. \textit{Design} Orientado a Domínio.
\end{resumo}
