\chapter[Introdução]{Introdução}
\label{cap:introducao}

Este capítulo tem como propósito apresentar o contexto existente na área de atuação desse
trabalho, buscando inserir conceitos que auxiliem na compreensão da proposta como um todo. 
Neste trabalho, aborda-se o desenvolvimento de aplicativos móveis como domínio.
Quanto à área de atuação, concentra-se na Engenharia de Software, mais precisamente
na Manutenção Evolutiva. Também será apresentada uma justificativa para esclarecer os
principais motivos por trás da realização do estudo proposto. A seguir, apresenta-se a
questão de pesquisa, bem como os objetivos, incluindo o objetivo geral e os objetivos específicos.
Por fim, será descrita a estrutura da monografia em termos de capítulos.

\section{Contexto}

O presente trabalho compreende, dentre outros aspectos, estudos na etapa de 
manutenção evolutiva. Nesse cenário, há necessidade de manter o \textit{software} alinhado 
com os anseios dos \textit{stakeholders}, bem como de acompanhar o mercado. Isso representa 
um desafio complexo devido à constante evolução das tecnologias, especialmente no contexto 
de dispositivos móveis, onde as mudanças ocorrem de maneira mais intensa \cite{santosetal}.

O aplicativo \cite{MiaAjuda}, que foi desenvolvido em 
um contexto acadêmico, com o envolvimento de professores, alunos voluntários e bolsistas 
(graduandos de Engenharia de Software e de áreas afins). O aplicativo possui cunho social, 
com a finalidade de conectar os usuários que necessitam de apoio - atuando  atua como uma 
plataforma que conecta pessoas que precisam de ajuda com voluntários dispostos a oferecer 
apoio, seja ele de natureza material ou emocional \cite{MiaAjuda}. O aplicativo surgiu em 2020, 
durante os primeiros meses da pandemia de Covid-19, quando o isolamento social era a principal 
medida de segurança. Nesse período desafiador, a demanda por soluções que ajudassem a população 
aumentou consideravelmente. Isso levou os desenvolvedores a criar o aplicativo rapidamente, 
utilizando tecnologias com as quais já estavam familiarizados. No entanto, devido à urgência 
da situação, o desenvolvimento do aplicativo não atendeu aos critérios considerados como boas práticas da área. 

Atualmente, o aplicativo tem passado por constantes evoluções, através de Trabalhos de Conclusão de Curso, Iniciações
Científicas, Projetos de Pesquisa e Extensão, dentre outros. No contexto desse trabalho,
pretende-se evoluir o aplicativo no intuito de incorporar novas orientações, sendo essas:
\textit{Test-Driven Development} \cite{vernon2016domain} e \textit{Domain-Driven Design} (DDD) \cite{beck2022test}. 
No primeiro caso,  objetiva-se a facilitação, principalmente da testabilidade. No segundo caso, 
objetiva-se prioritariamente um código orientado ao domínio, o que, naturalmente, tende a melhorar a
coesão, e até mesmo diminuir o acoplamento, dentre outros ganhos (\cite{gudwin2010componentes}; \cite{mattosdomain}).

Segundo \citeauthoronline{gudwin2010componentes} (\citeyear{gudwin2010componentes}), alta coesão - em particular no nível de código - 
é algo desejado, pois permite, por exemplo, compreender mais
facilmente sobre o que uma classe ou um método trata, uma vez que seus nomes estão
coerentes com suas responsabilidades. Já o baixo acoplamento, segundo \citeauthoronline{mattosdomain} (\citeyear{mattosdomain}) - também
no nível de código - é algo desejado, pois permite, por exemplo, incorporar uma nova 
funcionalidade sem ter de rever, reescrever, ou ajustar o código como um todo, uma vez que as 
interdependências entre classes, módulos e subsistemas estão adequadamente especificadas.

O TDD (\textit{Test-Driven Development}) consiste em uma abordagem de desenvolvimento
de \textit{software}, na qual é adotada como prática a escrita de testes unitários antes
de qualquer linha de código relacionada ao projeto. Essa prática visa aumentar a qualidade
do código e a confiabilidade do \textit{software} \cite{beck2022test}. Já o DDD (\textit{Domain-Driven Design}) 
consiste em uma abordagem de \textit{design} de \textit{software} que possui concentração na modelagem e na 
organização do código considerando o domínio do problema que o \textit{software} visa resolver. É 
amplamente utilizado para o desenvolvimento de sistemas complexos e com alta qualidade. 
O DDD tem como principal objetivo, alinhar o código com o domínio do problema, o conjunto 
de regras, os conceitos e a lógica, sendo esses elementos inerentes quando se almeja uma 
adequada especificação/implementação do software \cite{vernon2013implementing}.

Para que seja possível orientar-se por TDD, por ser algo que demanda planejar e
criar os testes primeiramente, antes mesmo de qualquer linha de código, há necessidade de
realizar a Reengenharia do Aplicativo Mia Ajuda, uma vez que ele já se encontra
desenvolvido. Segundo \citeauthoronline{cagnin2005parfait} (\citeyear{cagnin2005parfait}), a reengenharia consiste em uma técnica de análise crítica e reformulação de 
algo existente - nesse caso, um software - do início, ao invés de optar por desenvolver 
apenas melhorias. Entretanto, deve-se ter em mente a necessidade de considerar o que 
já foi/está desenvolvido. Afinal, trata-se de algo em funcionamento, com público alvo definido. 
Sendo assim, há uma demanda prioritária, que consiste em realizar a Engenharia Reversa do 
aplicativo existente. De acordo com \citeauthoronline{chikofsky1990reverse} (\citeyear{chikofsky1990reverse}), entende-se por Engenharia Reversa o processo 
pelo qual, a partir do código, ou seja, um insumo de baixo nível de abstração, recupera-se 
artefatos e insumos de maior nível de abstração, como por exemplo requisitos e regras de negócio. Tal 
levantamento será relevante para a realização da Reengenharia do Aplicativo.

O Aplicativo Mia Ajuda já tem público alvo: Comunidades e vizinhanças que desejam promover a 
solidariedade e a colaboração entre seus membros. Encontra-se implantado e hospedado
na Play Store, e atende as necessidades imediatas dos usuários. Entretanto, evoluir o
aplicativo tornou-se uma tarefa pouco provável \cite{pereira2023arquitetura}, em
especial, devido ao alto acoplamento, baixa coesão, dificuldade inerente de garantir
testabilidade, dentre outros.

Ao realizar a Reengenharia do Aplicativo Mia Ajuda, há a possibilidade de viabilização mais 
facilitada a incorporação de boas práticas de testabilidade, além de adequações em termos de 
modularização e ajustes no código, no intuito de aumentar a coesão e reduzir o acoplamento, 
orientando-se pelo domínio e por técnicas de programação (ex. \textit{Clean Code} \cite{martin2013clean}), 
já estudadas pela comunidade especializada em DDD.

\section{Justificativa}
\label{section:justificativa}

Técnicas de programação e demais boas práticas mencionadas anteriormente (ex. testes) melhoram o 
\textit{software} em diferentes aspectos, em especial mantendo maior coesão e menor acoplamento, além de 
facilidades em termos de manutenção evolutiva \cite{beck2022test}. Entretanto, ainda segundo \citeauthoronline{beck2022test} (\citeyear{beck2022test}), 
o uso dessas boas práticas demanda maiores esforço, capacitação e tempo da equipe responsável por 
prover o \textit{software}. Sendo assim, comumente, são práticas negligenciadas em projetos com prazos curtos e 
demandas urgentes.

Os testes de \textit{software} são fundamentais para, por exemplo, minimizar a 
existência de \textit{bugs}, conferindo ainda maior segurança de que antigas funcionalidades 
não serão desfeitas na implementação de novas, a menos que esse seja o anseio. Porém, apenas os testes não garantem tudo em um software, 
também é necessária uma boa modelagem da aplicação, o que está diretamente ligado ao \textit{design} da mesma \cite{vernon2013implementing}.

De acordo com \citeauthoronline{martin2000design} (\citeyear{martin2000design}) existem alguns sintomas que podem evidenciar que o \textit{design} do software 
não está correto para a aplicação, sendo eles: rigidez, fragilidade, imobilidade e viscosidade. 
Segundo autores renomados da área, tal como \citeauthoronline{larman2012applying} (\citeyear{larman2012applying}), muitos destes  sintomas estão atrelados aos 
princípios clássicos da Engenharia de \textit{Software} 
de coesão e acoplamento, ambos conhecidos como GRASPs (\textit{General Responsibility Assignment Software Patterns}). 
Caso não estejam bem implementados em um \textit{software}, ainda com base no mesmo autor, essa situação pode 
incorrer em complicações até mesmo quando pequenas mudanças e correções precisam ser realizadas no \textit{software}. 
Isso, praticamente, inviabiliza realizar atualizações no \textit{software}.

No contexto do aplicativo \cite{MiaAjuda}, no qual existe um alto acoplamento e uma baixa coesão na 
implementação de seus componentes arquiteturais e submódulos, é possível verificar os sintomas de um 
\textit{design} que pode ser adequado/refinado para servir corretamente para o contexto atual da aplicação. 
Aliado à melhor testabilidade, que pode ser atingida com o uso da técnica do TDD, o DDD faz com que o \textit{design} 
do software reflita exatamente suas funcionalidades, tornando muito pertinente e desejada a reengenharia do 
aplicativo \cite{MiaAjuda} orientando-se por essas duas abordagens \cite{vernon2013implementing}.

No intuito de conduzir esse trabalho, foram estabelecidas Questões de Pesquisa e de 
Desenvolvimento. Visando um cunho mais investigativo, há necessidade de pesquisa, 
considerando que o trabalho demanda estar embasado na literatura especializada, em 
especial envolvendo os conceitos de Engenharia Reversa, Reengenharia, TDD, DDD e Técnicas de 
Programação para Aplicativos Móveis já existentes, e que se encontram na etapa de Manutenção 
Evolutiva do ciclo de vida de um \textit{software}. Entretanto, há necessidade adicional de realizar Engenharia 
Reversa e, na sequência, a Reengenharia do Aplicativo Mia Ajuda, com base em TDD, DDD e Técnicas de 
Programação investigadas, justificando a definição da Questão de Desenvolvimento.


\section{Questões de Pesquisa e de Desenvolvimento}
\label{section:questoesdepesquisa}

Este trabalho visa responder a seguinte questão de pesquisa:

Quais são as principais recomendações da Engenharia de \textit{Software} no que diz respeito aos processos 
de Engenharia Reversa e Reengenharia de Aplicativos Móveis existentes, tomando como base TDD, DDD e Técnicas de Programação?

Responder essa questão demandará, em um primeiro momento: estabelecer o perfil de aplicativo móvel 
alvo da pesquisa, e conhecer sobre as melhores práticas adotadas para cada viés de orientação (TDD, 
DDD e Técnicas de Programação) aplicado aos processos de Engenharia Reversa e Reengenharia. Na sequência, 
pretende-se combinar esses levantamentos em uma abordagem única, revelando de forma clara sobre os resultados 
obtidos, e respondendo, portanto, a Questão de Pesquisa estabelecida.

Demais detalhes sobre o perfil do aplicativo móvel alvo e as melhores práticas adotadas constam descritos(as) ao longo desta monografia.
 
Tendo em vista conferir um viés mais aplicado ao trabalho, e considerando a necessidade de evolução do aplicativo 
Mia Ajuda, considerou-se a seguinte Questão de Desenvolvimento:

É possível aplicar as principais recomendações da área, acordadas nos levantamentos de cunho 
investigativo, no aplicativo Mia Ajuda (ou em parte representativa dele)?

Pretende-se, nesse caso, e no intuito de responder à Questão de Desenvolvimento, 
realizar a Engenharia Reversa e, na sequência, a Reengenharia do aplicativo Mia Ajuda 
(ou de parte representativa dele) orientando-se por TDD, DDD e Técnicas de Programação. 
Os resultados desse viés aplicado serão expostos na monografia final desse trabalho, bem 
como em repositório hospedado no \citeauthoronline{GitHub} (\citeyear{GitHub}). Entende-se por parte representativa do aplicativo 
uma ou mais \textit{feature(s)} de relevância, ainda em definição por parte dos autores desse trabalho.


\section{Objetivos}
\label{section:objetivos}

A fim de responder às questões anteriormente apresentadas, foram estabelecidos um Objetivo Geral e alguns Objetivos Específicos. 
Estes objetivos podem ser vistos nas próximas subseções.

\subsection{Objetivo Geral}

Reengenharia de um aplicativo móvel existente, visando testabilidade facilitada e adequada modelagem de domínio, 
sendo esse processo apoiado em práticas que possam ser usadas em aplicativos móveis de cunho similar.

\subsection{Objetivos Específicos}

\begin{itemize}
  \item Estudo sobre Engenharia Reversa de Aplicativos Móveis que se encontram na etapa de Manutenção Evolutiva;
  \item Estudo sobre Reengenharia de Aplicativos Móveis que se encontram na etapa de Manutenção Evolutiva;
  \item Levantamento sobre TDD;
  \item Levantamento sobre DDD;
  \item Levantamento sobre Técnicas de Programação;
  \item Documentação das principais recomendações da Engenharia de \textit{Software} acordadas nos estudos e levantamentos realizados;
  \item Aplicação das principais recomendações no Aplicativo Mia Ajuda, e
  \item Exposição dos resultados obtidos.

\end{itemize}

\section{Organização da Monografia}

Esta monografia está estruturada da seguinte forma:

\begin{itemize}
  \item Capítulo 2 - Referencial Teórico: Exposição dos referenciais teóricos utilizados para 
  embasamento e elaboração desse trabalho, com destaque para etapa de Manutenção Evolutiva, 
  Aplicativos Móveis, Engenharia Reversa, Reengenharia de Software, TDD (\textit{Test Driven Development}), 
  DDD (\textit{Domain-Driven Design}) e Técnicas de Programação;
  \item Capítulo 3 - Capítulo 3 - Suporte Tecnológico: Apresentação das principais  tecnologias utilizadas ao longo 
  da concretização desse trabalho, mencionando os \textit{frameworks} e ambientes para desenvolvimento e 
  gerenciamento (ex. versionamento e hospedagem), assim como recursos inerentes à comunicação 
  entre os autores e à elaboração dessa monografia;
  \item Capítulo 4 - Metodologia: Exibição do plano metodológico seguido pelos autores
  para o gerenciamento do trabalho num âmbito geral, destacando a classificação da pesquisa, e 
  os métodos para levantamento bibliográfico, desenvolvimento e análise dos resultados;
  \item Capítulo 5 - Capítulo 5 - Proposta: Apresentação da proposta do trabalho, detalhando-a em termos de origem 
  da ideia; perfil de dispositivo móvel (alvo de interesse desse projeto); insumos elaborados nessa 
  primeira etapa do projeto, dentre outros aspectos, e
  \item Capítulo 6 - Status Atual: Detalhamento quanto à situação de momento do trabalho, considerando 
  o término dessa primeira etapa, e acordando sobre as próximas demandas, a serem cumpridas na 
  etapa final do trabalho.
\end{itemize}


